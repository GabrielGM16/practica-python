# Generated by Django 5.2.7 on 2025-10-23 23:02

from django.db import migrations, models


def asignar_departamentos_por_defecto(apps, schema_editor):
    """Asignar departamentos por defecto basados en el nombre del proveedor"""
    Proveedor = apps.get_model('productos', 'Proveedor')
    
    # Mapeo de nombres de proveedores a departamentos
    mapeo_departamentos = {
        'TechSupply SA': 'Electrónicos',
        'ElectroMundo': 'Electrónicos',
        'AlimentiCorp': 'Alimentos',
        'FoodDistributors': 'Alimentos',
        'ModaTotal': 'Ropa',
    }
    
    # Actualizar proveedores existentes
    for proveedor in Proveedor.objects.filter(departamento__isnull=True):
        # Buscar coincidencia exacta primero
        if proveedor.nombre in mapeo_departamentos:
            proveedor.departamento = mapeo_departamentos[proveedor.nombre]
        else:
            # Asignar por palabras clave en el nombre
            nombre_lower = proveedor.nombre.lower()
            if any(word in nombre_lower for word in ['tech', 'electro', 'electronic']):
                proveedor.departamento = 'Electrónicos'
            elif any(word in nombre_lower for word in ['aliment', 'food', 'comida']):
                proveedor.departamento = 'Alimentos'
            elif any(word in nombre_lower for word in ['moda', 'ropa', 'fashion', 'textil']):
                proveedor.departamento = 'Ropa'
            elif any(word in nombre_lower for word in ['hogar', 'home', 'casa']):
                proveedor.departamento = 'Hogar'
            else:
                # Departamento por defecto para proveedores no categorizados
                proveedor.departamento = 'General'
        
        proveedor.save()


def revertir_departamentos(apps, schema_editor):
    """Revertir los cambios - opcional"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('productos', '0002_proveedor_departamento'),
    ]

    operations = [
        # Paso 1: Asignar departamentos por defecto a registros existentes
        migrations.RunPython(
            asignar_departamentos_por_defecto,
            revertir_departamentos
        ),
        
        # Paso 2: Hacer el campo obligatorio
        migrations.AlterField(
            model_name='proveedor',
            name='departamento',
            field=models.CharField(
                help_text='Departamento o categoría del proveedor (ej: Electrónicos, Alimentos, Ropa)',
                max_length=100
            ),
        ),
    ]
